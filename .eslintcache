[{"C:\\xampp\\htdocs\\accnting\\src\\index.js":"1","C:\\xampp\\htdocs\\accnting\\src\\App.js":"2","C:\\xampp\\htdocs\\accnting\\src\\reportWebVitals.js":"3"},{"size":546,"mtime":1610595981464,"results":"4","hashOfConfig":"5"},{"size":5153,"mtime":1610611344652,"results":"6","hashOfConfig":"5"},{"size":362,"mtime":499162500000,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"4xy85n",{"filePath":"11","messages":"12","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"13","usedDeprecatedRules":"10"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\xampp\\htdocs\\accnting\\src\\index.js",[],["16","17"],"C:\\xampp\\htdocs\\accnting\\src\\App.js",["18","19","20","21","22"],"import logo from './logo.svg';\nimport {useState,useEffect} from 'react'\nimport './App.css';\nimport {v4 as uuidv4} from 'uuid';\nfunction sortFunction(a,b){  \n  var dateA = new Date(a.date).getTime();\n  var dateB = new Date(b.date).getTime();\n  return dateA > dateB ? 1 : -1;  \n}; \nfunction status(debit,credit){\n  let dif = debit - credit;\n  if(dif < 0 ){\n    return \"Logi ka boi\"\n  }else if(dif!==0){\n    return dif\n  }else{\n    return \"Balance\";\n  }\n}\nfunction App() {\n  const [debit, setdebit] = useState([\n  ]);\n  const [credit, setcredit] = useState([]);\n  const totaldebit = debit.reduce((tots,debt) => tots + parseInt(debt.amount,10),0);  \n  const totalcredit = credit.reduce((tots,cred) => tots + parseInt(cred.amount,10),0);\n  const sortedebit = debit.sort(sortFunction);\n  const sortedcredit = credit.sort(sortFunction);\n  const [isbalance, setisbalance] = useState();\n  const [input, setinput] = useState(\n    {\n      date:\"\",\n      desc:\"\",\n      amount:0,\n      type:\"\"\n    }\n  )\n  \n  const onChange = e =>{\n    setinput({\n      ...input,\n      [e.target.name]:e.target.value\n    })\n  }\n  const onClick = (e)=>{\n    e.preventDefault();\n    if(input.date===\"\" || input.desc===\"\" || input.amount===\"\"){\n      alert(\"Fill out all fields\")\n    }else{\n    const newTodo = {\n      id:uuidv4(),\n      date:input.date,\n      desc:input.desc,\n      amount:input.amount \n    }\n    if(input.type===\"debit\"){\n      setdebit([...debit,newTodo]);  \n      setinput({\n        id:\"\",\n        date:\"\",\n        desc:\"\",\n        amount:\"\"\n      })\n    }else if(input.type===\"credit\"){\n      setcredit([...credit,newTodo])\n      setinput({\n        id:\"\",\n        date:\"\",\n        desc:\"\",\n        amount:\"\"\n      })\n    }else{\n        alert(\"none\");\n    }\n  }\n  }\n  const deletecredit = e =>{\n  setcredit([...credit.filter(cred => cred.id!==e.target.value)]);\n  }\n  const deletedebit = e =>{\n    setdebit([...debit.filter(deb => deb.id!==e.target.value)]);\n    }\n \n  return (\n    <div className=\"App\">\n     <nav className=\"navbar navbar-light bg-light\">\n       <a className=\"navbar-brand\" href=\"\">Accounting</a>\n    </nav>\n      \n        <div className=\"border\">\n      <div className=\"row\">\n        <div className=\"col\">\n          <input type=\"date\" className=\"form-control\" placeholder=\"Name\" name=\"date\" onChange={onChange} value={input.date}/>\n        </div>\n        <div className=\"col\">\n          <input className=\"form-control\" placeholder=\"Description\" name=\"desc\" value={input.desc} onChange={onChange}/>\n        </div>\n        <div className=\"col\">\n          <input className=\"form-control\" placeholder=\"Amount\" name=\"amount\" value={input.amount}  onChange={onChange}/>\n        </div>\n        <div className=\"col\">\n            <select name=\"type\" className=\"form-control\" onChange={onChange}>\n              <option value=\"none\">Pls Choose</option>\n              <option value=\"credit\">Credit</option>\n              <option value=\"debit\">Debit</option>\n            </select>\n        </div>\n      </div>\n      <br></br>\n      <button className=\"btn btn-success\" onClick={onClick}>Add Entry</button>\n      </div>\n      <div className=\"margin\">\n            <p>Status: \n            {status(totaldebit,totalcredit)}\n            </p>\n            <div className=\"row\">\n            <div className=\"col\">\n              <p className=\"title\">Debit</p>\n              <p>Total: {totaldebit}</p>\n                <table class=\"table\">  \n                  <thead>\n                    <tr>\n                      <th scope=\"col\">Date</th>\n                      <th scope=\"col\"> </th>\n                      <th scope=\"col\">Cash</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {sortedebit.map((res,index) =>(\n                      <tr key={index}>\n                        <td>{res.date}</td>\n                        <td>{res.desc}</td>\n                        <td>{res.amount}</td>\n                        <td><button className=\"btn btn-danger btn-sm\" onClick={deletedebit} value={res.id} >Remove</button></td>\n                      </tr>\n                    ))}\n                  </tbody>\n              </table>\n\n           </div>\n          <div className=\"col\">\n              <p className=\"title\">Credit</p>\n              <p>Total: {totalcredit}</p>\n              <table class=\"table\">  \n                  <thead>\n                    <tr>\n                      <th scope=\"col\">Date</th>\n                      <th scope=\"col\"> </th>\n                      <th scope=\"col\">Cash</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {sortedcredit.map((res,index) =>(\n                      <tr key={index}>\n                        <td>{res.date}</td>\n                        <td>{res.desc}</td>\n                        <td>{res.amount}</td>\n                        <td><button className=\"btn btn-danger btn-sm\" onClick={deletecredit} value={res.id} >Remove</button></td>\n                      </tr>\n                    ))}\n                  </tbody>\n              </table>\n                 \n\n          </div>\n      </div>\n  </div>\n\n    </div>\n  );\n}\n\nexport default App;\n","C:\\xampp\\htdocs\\accnting\\src\\reportWebVitals.js",[],{"ruleId":"23","replacedBy":"24"},{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","severity":1,"message":"28","line":1,"column":8,"nodeType":"29","messageId":"30","endLine":1,"endColumn":12},{"ruleId":"27","severity":1,"message":"31","line":2,"column":18,"nodeType":"29","messageId":"30","endLine":2,"endColumn":27},{"ruleId":"27","severity":1,"message":"32","line":28,"column":10,"nodeType":"29","messageId":"30","endLine":28,"endColumn":19},{"ruleId":"27","severity":1,"message":"33","line":28,"column":21,"nodeType":"29","messageId":"30","endLine":28,"endColumn":33},{"ruleId":"34","severity":1,"message":"35","line":86,"column":8,"nodeType":"36","endLine":86,"endColumn":44},"no-native-reassign",["37"],"no-negated-in-lhs",["38"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'isbalance' is assigned a value but never used.","'setisbalance' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]